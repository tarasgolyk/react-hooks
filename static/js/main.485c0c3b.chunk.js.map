{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onKeyPress","event","key","clearUsers","trim","hide","search","show","onChange","target","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlname","params","useEffect","company","location","bio","blog","following","followers","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.485c0c3b.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const Navbar = () => (\r\n  <nav className='navbar navbar-dark bg-primary navbar-expand-lg'>\r\n    <div className=\"navbar-brand\">\r\n      Github Search\r\n    </div>\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink exact to='/' className='nav-link'>Home</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink to='/about' className='nav-link'>Info</NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n)","import {createContext} from 'react'\r\n\r\nexport const AlertContext = createContext()","import {createContext} from 'react'\r\n\r\nexport const GithubContext = createContext()","import React, {useContext, useState} from 'react'\r\nimport {AlertContext} from '../context/alert/alertContext'\r\nimport {GithubContext} from '../context/github/githubContext'\r\n\r\nexport const Search = () => {\r\n  const [value, setValue] = useState('')\r\n  const alert = useContext(AlertContext)\r\n  const github = useContext(GithubContext)\r\n\r\n  const onSubmit = (event) => {\r\n    if (event.key !== 'Enter') {\r\n      return\r\n    }\r\n\r\n    github.clearUsers()\r\n\r\n    if (value.trim()) {\r\n      alert.hide()\r\n      github.search(value.trim())\r\n    } else {\r\n      alert.show('Input user data')\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        placeholder='Input nickname...'\r\n        onKeyPress={onSubmit}\r\n        value={value}\r\n        onChange={event => setValue(event.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Card = ({user}) => (\r\n  <div className=\"card\">\r\n    <img src={user.avatar_url} alt={user.login} className='card-img-top' />\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{user.login}</h5>\r\n      <Link to={'/profile/' + user.login} className='btn btn-primary'>Open</Link>\r\n    </div>\r\n  </div>\r\n)","import React, {Fragment, useContext} from 'react'\r\nimport {Search} from '../components/Search'\r\nimport {Card} from '../components/Card'\r\nimport {GithubContext} from '../context/github/githubContext'\r\n\r\nexport const Home = () => {\r\n  const {loading, users} = useContext(GithubContext)\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n\r\n      <div className=\"row\">\r\n\r\n        {loading\r\n          ? <p className='text-center'>Loading...</p>\r\n          : users.map(user => (\r\n              <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                <Card user={user} />\r\n              </div>\r\n            ))\r\n        }\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const About = () => {\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Info</h1>\r\n        <p className=\"lead\">App version <strong>1.0.0</strong></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const Repos = ({repos}) => (\r\n  <React.Fragment>\r\n    {repos.map(repo => (\r\n      <div className='card mb-3' key={repo.id}>\r\n        <div className=\"card-body\">\r\n          <h5>\r\n            <a\r\n              href={repo.html_url}\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >{repo.name}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </React.Fragment>\r\n)","import React, {useContext, useEffect, Fragment} from 'react'\r\nimport {GithubContext} from '../context/github/githubContext'\r\nimport {Link} from 'react-router-dom'\r\nimport {Repos} from '../components/Repos'\r\n\r\nexport const Profile = ({match}) => {\r\n  const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\r\n  const urlname = match.params.name\r\n\r\n  useEffect(() => {\r\n    getUser(urlname)\r\n    getRepos(urlname)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <p className='text-center'>Loading...</p>\r\n  }\r\n\r\n  const {\r\n    name, company, avatar_url,\r\n    location, bio, blog, login, following,\r\n    html_url, followers, public_repos, public_gists\r\n  } = user\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-link'>Home</Link>\r\n\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img\r\n                src={avatar_url}\r\n                alt={name}\r\n                style={{width: '150px'}}\r\n              />\r\n              <h1>{name}</h1>\r\n              {location && <p>Location: {location}</p>}\r\n            </div>\r\n            <div className=\"col\">\r\n              {\r\n                bio && <Fragment>\r\n                  <h3>BIO</h3>\r\n                  <p>{bio}</p>\r\n                </Fragment>\r\n              }\r\n              <a\r\n                href={html_url}\r\n                className='btn btn-dark'\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n              >Open profile</a>\r\n\r\n              <ul>\r\n                {login && <li>\r\n                  <strong>Username: </strong> {login}\r\n                </li>}\r\n                {company && <li>\r\n                  <strong>Company: </strong> {company}\r\n                </li>}\r\n                {blog && <li>\r\n                  <strong>Website: </strong> {blog}\r\n                </li>}\r\n              </ul>\r\n\r\n              <div className='badge badge-primary'>Followers: {followers}</div>\r\n              <div className='badge badge-success'>Following: {following}</div>\r\n              <div className='badge badge-info'>Repos: {public_repos}</div>\r\n              <div className='badge badge-dark'>Gists: {public_gists}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Repos repos={repos}/>\r\n    </Fragment>\r\n  )\r\n}","import React, {useContext} from 'react'\r\nimport {AlertContext} from '../context/alert/alertContext'\r\n\r\nexport const Alert = () => {\r\n  const {alert, hide} = useContext(AlertContext)\r\n\r\n  if (!alert) return null\r\n\r\n  return (\r\n    <div\r\n      className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\r\n      role=\"alert\"\r\n    >\r\n      {alert.text}\r\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}","import {HIDE_ALERT, SHOW_ALERT} from '../types'\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, action) => action.payload,\r\n  [HIDE_ALERT]: () => null,\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'","import React, {useReducer} from 'react'\r\nimport {AlertContext} from './alertContext'\r\nimport {alertReducer} from './alertReducer'\r\nimport {HIDE_ALERT, SHOW_ALERT} from '../types'\r\n\r\nexport const AlertState = ({children}) => {\r\n  const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n  const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n  const show = (text, type = 'secondary') => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: {type, text}\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider value={{\r\n      hide, show, alert: state\r\n    }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  )\r\n}","import {GET_REPOS, SEARCH_USERS, GET_USER, CLEAR_USERS, SET_LOADING} from '../types'\r\n\r\nconst handlers = {\r\n  [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n  [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\r\n  [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\r\n  [SET_LOADING]: state => ({...state, loading: true}),\r\n  [CLEAR_USERS]: state => ({...state, users: []}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport axios from 'axios'\r\nimport {GithubContext} from './githubContext'\r\nimport {githubReducer} from './githubReducer'\r\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from '../types'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\nexport const GithubState = ({children}) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: []\r\n  }\r\n  const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n  const search = async value => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n    )\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: response.data.items\r\n    })\r\n  }\r\n\r\n  const getUser = async name => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}?`)\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: response.data\r\n    })\r\n  }\r\n\r\n  const getRepos = async name => {\r\n    setLoading()\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: response.data\r\n    })\r\n  }\r\n\r\n  const clearUsers = () => dispatch({type: CLEAR_USERS})\r\n\r\n  const setLoading = () => dispatch({type: SET_LOADING})\r\n\r\n  const {user, users, repos, loading} = state\r\n\r\n  return (\r\n    <GithubContext.Provider value={{\r\n       setLoading, search, getUser, getRepos, clearUsers,\r\n       user, users, repos, loading\r\n    }}>\r\n      {children}\r\n    </GithubContext.Provider>\r\n  )\r\n}","import React from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport {Navbar} from './components/Navbar'\nimport {Home} from './pages/Home'\nimport {About} from './pages/About'\nimport {Profile} from './pages/Profile'\nimport {Alert} from './components/Alert'\nimport {AlertState} from './context/alert/AlertState'\nimport {GithubState} from './context/github/GithubState'\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className='container pt-4'>\n            <Alert alert={{text: 'Test alert'}}/>\n            <Switch>\n              <Route path='/' exact component={Home} />\n              <Route path='/about' component={About} />\n              <Route path='/profile/:name' component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}